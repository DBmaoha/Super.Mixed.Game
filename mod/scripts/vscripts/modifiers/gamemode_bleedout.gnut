untyped // for player.GiveExtraWeaponMod()
global function Modded_Gamemode_Bleedout_Init

// things below should be in riff
/*
riff_player_bleedout 1
player_bleedout_forceHolster 1
player_bleedout_forceDeathOnTeamBleedout 1
player_bleedout_bleedoutTime 30
player_bleedout_firstAidTime 3
player_bleedout_firstAidTimeSelf 8
player_bleedout_firstAidHealPercent 0.4
player_bleedout_aiBleedingPlayerMissChance 0.5
*/

const float GAMEMODE_BLEEDOUT_TIME = 30
const float GAMEMODE_FIRSTAID_TIME = 4
const float GAMEMODE_FIRSTAID_TIME_SELF = 8
const float GAMEMODE_FIRSTAID_HEAL_PERCENT = 0.2
const float GAMEMODE_AI_BLEEDING_PLAYER_MISS_CHANCE = 0.5
const bool GAMEMODE_FORCE_WEAPON_HOLSTER = true
const bool GAMEMODE_DEATH_ON_TEAM_BLEEDOUT = false

const float BLEEDOUT_MODE_SHIELD_BATTERY_USETIME = 3.2 // avoid sound issue
const float BLEEDOUT_MODE_AMPED_SHIELD_BATTERY_USETIME = 7.0
const int BLEEDOUT_MODE_SHIELD_BATTERY_REGEN_AMOUNT = 80
const int BLEEDOUT_MODE_AMPED_SHIELD_BATTERY_REGEN_AMOUNT = 300

const int BLEEDOUT_MODE_HEALTH = 100
const int BLEEDOUT_MODE_SHIELD_HEALTH = 125

const array<string> BLEEDOUT_MODE_DISABLED_TACTICALS = [ "mp_weapon_deployable_cover", "mp_ability_cloak" ]
const string BLEEDOUT_MODE_REPLACEMENT_TACTICAL = "mp_ability_grapple"

void function Modded_Gamemode_Bleedout_Init()
{
    Rodeo_SetBatterySkinRandom( false ) // from _rodeo_titan.gnut
    Rodeo_SetBatteryThrowEnabled( true )
    SetBurnCardAllBattery( true ) // from _burnmeter.gnut
    SetAltPilotChance( 1 ) // always change model

    SetShouldFUCKOFFCLOAK( true ) // fuck them
    
    // from pilot_shield_battery.gnut, shield battery main mechanic
    SetPilotBatteryUsageAllowed( true )
    SetShieldBatteryUseTime( BLEEDOUT_MODE_SHIELD_BATTERY_USETIME, BLEEDOUT_MODE_AMPED_SHIELD_BATTERY_USETIME )
    SetShieldBatteryRegenAmount( BLEEDOUT_MODE_SHIELD_BATTERY_REGEN_AMOUNT, BLEEDOUT_MODE_AMPED_SHIELD_BATTERY_REGEN_AMOUNT )

    Bleedout_AddCallback_OnPlayerStartBleedout( BleedoutMode_OnPlayerDowned )
    Bleedout_AddCallback_OnPlayerGiveFirstAid( BleedoutMode_OnPlayerRevived )

    AddCallback_GameStateEnter( eGameState.Playing, SetBleedoutState )
    AddCallback_PlayerClassChanged( OnPlayerClassChanged )
    AddCallback_OnPlayerRespawned( OnPlayerRespawned )
    AddCallback_OnPlayerGetsNewPilotLoadout( OnPlayerGetsPilotLoadout )
    AddCallback_OnPlayerKilled( OnPlayerKilled )

    /* // do these in riff
    Riff_ForcePlayerBleedout( ePlayerBleedout.Enabled )
    BleedoutShared_Init( 
        GAMEMODE_BLEEDOUT_TIME, 
        GAMEMODE_FIRSTAID_TIME,
	    GAMEMODE_FIRSTAID_TIME_SELF, 
        GAMEMODE_FIRSTAID_HEAL_PERCENT,
	    GAMEMODE_AI_BLEEDING_PLAYER_MISS_CHANCE, 
        GAMEMODE_FORCE_WEAPON_HOLSTER,
	    GAMEMODE_DEATH_ON_TEAM_BLEEDOUT 
        )
    Bleedout_Init()
    */

    Riff_ForceTitanAvailability( eTitanAvailability.Never )
}

void function SetBleedoutState()
{
    

    //BleedoutShared_Init( 30, 4,8, 0.4,0.5, true,true )
}

void function OnPlayerClassChanged( entity player )
{
    thread Bleedout_HealthRegenThink( player )
}

void function OnPlayerRespawned( entity player )
{
    
}

void function OnPlayerGetsPilotLoadout( entity player, PilotLoadoutDef p )
{
    ClearNessy( player )
	thread SpawnNessyOutfit( player ) // become cuter!
    //entity meleeWeapon = player.GetOffhandWeapon( OFFHAND_MELEE )
    //if( IsValid( meleeWeapon ) )
    //    meleeWeapon.AddMod( "pushback_melee" )

    for ( int i = 0; i <= OFFHAND_MELEE; i++ ) // for better sloting
    {
        entity nowWeapon = player.GetOffhandWeapon( i )
        if( IsValid( nowWeapon ))
        {
            string className = nowWeapon.GetWeaponClassName()
            if( BLEEDOUT_MODE_DISABLED_TACTICALS.contains( className ) )
            {
                player.TakeWeaponNow( className )
                player.GiveOffhandWeapon( BLEEDOUT_MODE_REPLACEMENT_TACTICAL, i )
            }
        }
    }

    SyncedMelee_Disable( player )
    player.SetMaxHealth( BLEEDOUT_MODE_HEALTH )
    player.SetHealth( BLEEDOUT_MODE_HEALTH )
    player.SetShieldHealthMax( BLEEDOUT_MODE_SHIELD_HEALTH )
    player.SetShieldHealth( BLEEDOUT_MODE_SHIELD_HEALTH )

	player.GiveExtraWeaponMod( "bleedout_balance" )
	player.GiveExtraWeaponMod( "pushback_melee" )
	player.GiveExtraWeaponMod( "fuckoff_ordnance" )

    thread DelayedCheckMelee( player )
}

void function DelayedCheckMelee( entity player )
{
    WaitFrame()
    if( IsAlive( player ) )
    {
        if( !IsValid( player.GetOffhandWeapon( OFFHAND_MELEE ) ) )
            player.GiveOffhandWeapon( "melee_pilot_emptyhanded", OFFHAND_MELEE )
    }
}

void function OnPlayerKilled( entity victim, entity attacker, var damageInfo )
{
    ClearNessy( victim )
    entity battery = Rodeo_CreateBatteryPack()
    if( IsValid( battery ) )
    {
        battery.SetOrigin( victim.EyePosition() )
        battery.SetVelocity( < 0,0,1 > )
    }
}

void function BleedoutMode_OnPlayerDowned( entity player )
{
    print( "Running OnPlayerDowned()" )
	//player.Signal( "StopHealthRegenThink" )
    player.SetMaxHealth( BLEEDOUT_MODE_HEALTH * 5 )
    player.SetHealth( BLEEDOUT_MODE_HEALTH )
}

void function BleedoutMode_OnPlayerRevived( entity player )
{
    print( "Running OnPlayerRevived()" )
	//player.Signal( "StopHealthRegenThink" )
    player.SetMaxHealth( BLEEDOUT_MODE_HEALTH )
    player.p.lastDamageTime = Time()
}